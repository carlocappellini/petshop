{"ast":null,"code":"var _jsxFileName = \"/Users/a9999/petshop/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Home from \"./components/Home\";\nimport FormApplication from \"./components/FormApplication\";\nimport CustomNav from \"./components/CustomNav\";\nimport Current from \"./components/Current\";\nimport Client from \"./components/Client\";\nimport SignUp from \"./components/SignUp\";\nimport AddPet from \"./components/AddPet\";\nimport PetList from \"./components/PetList\";\nimport EditPet from \"./components/EditPet\";\nimport EditClient from \"./components/EditClient\";\nimport History from \"./components/History\";\nimport Login from \"./components/Login\";\nimport ServiceNew from \"./components/ServiceNew\";\nimport _ from \"lodash\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accounts: {\n        username: \"\",\n        password: \"\"\n      },\n      clientInfo: {\n        firstname: \"\",\n        lastname: \"\",\n        homephone: \"\",\n        workphone: \"\"\n      },\n      petInfo: {\n        name: \"\",\n        color: \"\",\n        specialconcerns: \"\",\n        rabies: \"\"\n      },\n      clients: \"\",\n      filteredClients: [],\n      filteredPets: [],\n      client_id: \"\",\n      clientName: \"\",\n      breedId: \"\",\n      breedName: \"\",\n      clientPets: \"\",\n      services: \"\",\n      serviceId: \"\",\n      breeds: \"\",\n      clientIdOnSelect: \"\",\n      pets: \"\",\n      petIdOnSelect: \"\",\n      appointments: \"\",\n      activeItem: \"Home\",\n      activeItemHome: \"Quick Check In\",\n      isLoading: false,\n      results: \"\",\n      value: \"\",\n      checkedIn: \"\",\n      search: \"\",\n      serviceNewValue: \"\",\n      curTime: \"\"\n    };\n\n    this.fetchingAllClients = () => {\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(` https://agile-falls-85256.herokuapp.com/clients`, configObj).then(resp => resp.json()).then(clients => {\n        console.log(\"hi this is from the heroku\", clients);\n        this.setState({\n          clients: clients,\n          filteredClients: clients\n        });\n      });\n    };\n\n    this.fetchingAllBreed = () => {\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(`http://localhost:3000/breeds`, configObj).then(resp => resp.json()).then(breeds => {\n        this.setState({\n          breeds\n        });\n      });\n    };\n\n    this.fetchingAllServices = () => {\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(`http://localhost:3000/services`, configObj).then(resp => resp.json()).then(services => {\n        this.setState({\n          services\n        });\n      });\n    };\n\n    this.fetchingAllPets = () => {\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(`http://localhost:3000/pets`, configObj).then(resp => resp.json()).then(pets => {\n        this.setState({\n          pets: pets,\n          filteredPets: pets\n        });\n      });\n    };\n\n    this.fetchingAllAppointments = () => {\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(`http://localhost:3000/appointments`, configObj).then(resp => resp.json()).then(appointments => {\n        this.setState({\n          appointments\n        });\n      });\n    };\n\n    this.submitingPet = event => {\n      this.props.history.push(\"pet\");\n      const {\n        petInfo,\n        breedId,\n        client_id\n      } = this.state;\n      console.log(\"pet info----> \", petInfo);\n      event.preventDefault();\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: {\n            name: petInfo.name,\n            color: petInfo.color,\n            specialconcerns: petInfo.specialconcerns,\n            rabies: petInfo.rabies,\n            breed_id: breedId,\n            client_id: client_id\n          }\n        })\n      };\n      fetch(`http://localhost:3000/pets`, configObj).then(resp => resp.json()).then(pet => {\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\"\n          }\n        });\n        const client_id = this.state.client_id;\n        this.fetchingClientPets(client_id);\n        this.fetchingAllPets();\n      });\n    };\n\n    this.submitingEditPet = event => {\n      event.preventDefault();\n      const {\n        petInfo,\n        client_id,\n        breedId\n      } = this.state;\n      const petId = petInfo.id;\n      const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          pet: {\n            name: petInfo.name,\n            color: petInfo.color,\n            specialconcerns: petInfo.specialconcerns,\n            rabies: petInfo.rabies,\n            breed_id: breedId,\n            client_id: client_id\n          }\n        })\n      };\n      fetch(`http://localhost:3000/pets/${petId}`, configObj).then(resp => resp.json()).then(pet => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\"\n          }\n        });\n      });\n      this.props.history.push(\"/pet\");\n    };\n\n    this.petBreedOnChange = breed => {\n      const breedId = breed.id;\n      const breedName = breed.name;\n      this.setState({\n        breedId\n      });\n      this.setState({\n        breedName\n      });\n    };\n\n    this.submitingEditClient = event => {\n      event.preventDefault();\n      const {\n        clientInfo,\n        client_id\n      } = this.state;\n      const c_id = clientInfo.id;\n      const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          client: {\n            lastname: clientInfo.lastname,\n            firstname: clientInfo.firstname,\n            homephone: clientInfo.homephone,\n            workphone: clientInfo.workphone\n          }\n        })\n      };\n      fetch(`http://localhost:3000/clients/${c_id}`, configObj).then(resp => resp.json()).then(pet => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\"\n          }\n        });\n        this.fetchingAllClients();\n      });\n      this.props.history.push(\"/client\");\n    };\n\n    this.petBreedOnChange = (e, breed) => {\n      console.log(\"breed change\", breed.value);\n      const breedId = breed.value;\n      const breedName = breed.name;\n      this.setState({\n        breedId\n      });\n      this.setState({\n        breedName\n      });\n    };\n\n    this.petInfoInputChange = event => {\n      const petInfo = { ...this.state.petInfo\n      };\n      petInfo[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        petInfo\n      });\n    };\n\n    this.handleLoginChange = (e, data) => {\n      const login = { ...this.state.login\n      };\n      login[e.currentTarget.name] = e.currentTarget.value;\n      this.setState({\n        login\n      });\n    };\n\n    this.handleChange = event => {\n      const accounts = { ...this.state.accounts\n      };\n      accounts[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        accounts\n      });\n    };\n\n    this.handleChangeServiceNew = event => {\n      const serviceNewValue = { ...this.state.serviceNewValue\n      };\n      serviceNewValue[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        serviceNewValue\n      });\n    };\n\n    this.addingNewService = (event, data) => {\n      event.preventDefault();\n      const {\n        serviceNewValue\n      } = this.state;\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          service: {\n            name: serviceNewValue.name\n          }\n        })\n      };\n      fetch(`http://localhost:3000/services`, configObj).then(resp => resp.json()).then(json => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n        this.fetchingAllServices();\n        this.setState({\n          serviceNewValue: {\n            name: \"\"\n          }\n        });\n      });\n    };\n\n    this.formHandleChange = event => {\n      const clientInfo = { ...this.state.clientInfo\n      };\n      clientInfo[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        clientInfo\n      });\n    };\n\n    this.handleClick = event => {\n      const {\n        login\n      } = this.state;\n      console.log(login);\n      event.preventDefault();\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: login.username,\n            password: login.password\n          }\n        })\n      };\n      fetch(`http://localhost:3000/api/login`, configObj).then(resp => resp.json()).then(json => {\n        console.log(\"json\", json);\n\n        if (!json.hasOwnProperty(\"error\")) {\n          window.localStorage.setItem(\"token\", json.jwt);\n          window.localStorage.setItem(\"username\", json.user.username);\n          window.localStorage.setItem(\"userId\", `${json.user.id}`); // window.location.assign(\"http://localhost:3000/users\");\n\n          this.setState({\n            current_user: json.user\n          }); // console.log(\"fetching\", json);\n        } else {\n          this.setState({\n            error: json.error\n          });\n        }\n      }).then(data => {\n        const localUserId = localStorage.getItem(\"userId\");\n\n        if (localUserId) {\n          this.fetchCurrentUser(localUserId);\n        }\n      }).catch(error => console.log(\"username or password did not match\"));\n      this.setState({\n        username: \"\",\n        password: \"\"\n      });\n      this.fetchingAllServices();\n      this.props.history.push(\"/\");\n    };\n\n    this.fetchingClientPets = client_id => {\n      console.log(\"client info\");\n      let configObj = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      };\n      fetch(`http://localhost:3000/clients/${client_id}`, configObj).then(resp => resp.json()).then(pets => {\n        console.log(\"my response\", pets);\n        this.setState({\n          clientPets: pets\n        });\n      });\n    };\n\n    this.addingPetToAClient = client => {\n      const client_id = client.id;\n      this.fetchingClientPets(client_id);\n      this.setState({\n        client_id\n      });\n      this.setState({\n        clientName: client.firstname\n      });\n      this.props.history.push(\"/addPet\");\n    };\n\n    this.addingUser = (event, data) => {\n      event.preventDefault();\n      const {\n        accounts\n      } = this.state;\n      const configObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: accounts.username,\n            password: accounts.password\n          }\n        })\n      };\n      fetch(`http://localhost:3000/api/users`, configObj).then(resp => resp.json()).then(json => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.clientPetOnClick = client => {\n      const client_id = client.id;\n      this.fetchingClientPets(client_id);\n      this.setState({\n        client_id\n      });\n      this.setState({\n        clientName: client.firstname\n      });\n      this.props.history.push(\"/pet\");\n    };\n\n    this.petOnClickDelete = pet => {\n      console.log(\"delete\");\n      const petId = pet.id;\n      const pets = this.state.clientPets.filter(d => d.id !== petId);\n      this.setState({\n        clientPets: pets\n      });\n      fetch(`http://localhost:3000/pets/${petId}`, {\n        method: \"DELETE\"\n      });\n      this.fetchingAllPets();\n    };\n\n    this.serviceOnClickDelete = service => {\n      console.log(\"service\", service.id);\n      const serviceId = service.id;\n      const services = this.state.services.filter(d => d.id !== serviceId);\n      console.log(services);\n      this.setState({\n        services\n      });\n      fetch(`http://localhost:3000/services/${serviceId}`, {\n        method: \"DELETE\"\n      });\n      this.fetchingAllServices();\n    };\n\n    this.deleteClientHandleClick = client => {\n      const clientId = client.id;\n      const clients = this.state.clients.filter(c => c.id !== clientId);\n      this.setState({\n        clients\n      });\n      fetch(`http://localhost:3000/clients/${clientId}`, {\n        method: \"DELETE\"\n      });\n      this.fetchingAllClients();\n    };\n\n    this.petOnClickEdit = pet => {\n      this.setState({\n        petInfo: pet\n      });\n      this.props.history.push(\"/editPet\");\n    };\n\n    this.addingClient = event => {\n      event.preventDefault();\n      const {\n        clientInfo\n      } = this.state;\n      fetch(\"http://localhost:3000/clients\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          client: {\n            lastname: clientInfo.lastname,\n            firstname: clientInfo.firstname,\n            homephone: clientInfo.homephone,\n            workphone: clientInfo.workphone\n          }\n        })\n      }).then(r => r.json()).then(client => {\n        console.log(\"after submitting\", client);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\"\n          }\n        });\n        this.fetchingAllClients();\n      });\n      this.props.history.push(\"/client\");\n    };\n\n    this.clientOnClickEdit = clientInfo => {\n      this.setState({\n        clientInfo\n      });\n      this.props.history.push(\"/editclient\");\n    };\n\n    this.servicesOnClick = (e, service) => {\n      console.log(e);\n      console.log(\"service => \", service.value);\n      const serviceId = service.value;\n      this.setState({\n        serviceId\n      });\n    };\n\n    this.selectPetOnClick = (e, pet) => {\n      console.log(\"pet -> \", pet.value);\n      const petIdOnSelect = pet.value;\n      this.setState({\n        petIdOnSelect\n      });\n    };\n\n    this.checkIn = event => {\n      event.preventDefault();\n      console.log(\"event\", event);\n      fetch(\"http://localhost:3000/appointments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          appointment: {\n            pet_id: this.state.petIdOnSelect,\n            service_id: this.state.serviceId,\n            date: this.state.curTime\n          }\n        })\n      }).then(r => r.json()).then(appointments => {\n        console.log(\"after submitting\", appointments);\n        this.setState({\n          appointments: [...this.state.appointments, appointments],\n          activeItemHome: \"Checked In\"\n        });\n        console.log(\"after setting state\", this.state.appointments);\n        this.fetchingAllAppointments();\n        this.fetchingAllPets();\n      });\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        value: result.name\n      });\n    };\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState({\n          isLoading: false,\n          results: \"\",\n          value: \"\"\n        });\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.name);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.state.pets, isMatch)\n        });\n      }, 300);\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItem: name\n      });\n\n      if (name === \"History\") {\n        this.fetchingAllPets();\n      }\n    };\n\n    this.handleItemClickHome = (e, {\n      name\n    }) => this.setState({\n      activeItemHome: name\n    });\n\n    this.finishOnClick = data => {\n      console.log(\"data on click\", data);\n      const configObj = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          appointment: {\n            appointment_id: data.appointmentId\n          }\n        })\n      };\n      fetch(`http://localhost:3000/appointments/${data.appointmentId}`, configObj).then(resp => resp.json()).then(a => {\n        console.log(a);\n        this.fetchingAllAppointments();\n      });\n    };\n\n    this.searchClientsHandleChange = (input, e) => {\n      console.log(\"input\", input);\n      console.log(\"e\", e);\n      this.setState({\n        search: input.target.value\n      });\n      const lowercasedSearchInput = this.state.search.toLowerCase();\n      console.log(\"lower case search input\", lowercasedSearchInput);\n      const searchResults = this.state.clients.filter(client => {\n        let lowercasedClient = client.firstname.toLowerCase();\n        return lowercasedClient.includes(lowercasedSearchInput);\n      });\n      console.log(\"search results\", searchResults);\n      this.setState({\n        filteredClients: searchResults\n      });\n\n      if (input.nativeEvent.inputType === \"deleteContentBackward\") {\n        this.fetchingAllClients();\n      }\n    };\n\n    this.searchHistoryHandleChange = (input, e) => {\n      this.setState({\n        search: input.target.value\n      });\n      const lowercasedSearchInput = this.state.search.toLowerCase();\n      console.log(\"lower case search input\", lowercasedSearchInput);\n      const searchResults = this.state.pets.filter(pet => {\n        let lowercasedPet = pet.name.toLowerCase();\n        return lowercasedPet.includes(lowercasedSearchInput);\n      });\n      console.log(\"search results\", searchResults);\n      this.setState({\n        filteredPets: searchResults\n      });\n\n      if (input.nativeEvent.inputType === \"deleteContentBackward\") {\n        this.fetchingAllPets();\n      }\n    };\n\n    this.handleClickLogout = event => {\n      event.preventDefault();\n      localStorage.clear();\n      this.props.history.push(\"/\");\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingAllClients();\n    this.fetchingAllAppointments();\n    this.fetchingAllBreed();\n    this.fetchingAllPets();\n    this.fetchingAllServices();\n    this.setState({\n      curTime: new Date().toLocaleDateString()\n    });\n  }\n\n  render() {\n    console.log(\"pets\", this.state.pets);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui huge header center aligned blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }\n    }, \"K9 Grooming\", /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sub header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }\n    }, \"Manage your account settings and set e-mail preferences.\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CustomNav, {\n      handleItemClick: this.handleItemClick,\n      activeItem: this.state.activeItem,\n      searchClientsHandleChange: this.searchClientsHandleChange,\n      searchHistoryHandleChange: this.searchHistoryHandleChange,\n      handleClickLogout: this.handleClickLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        activeItemHome: this.state.activeItemHome,\n        finishOnClick: this.finishOnClick,\n        handleItemClickHome: this.handleItemClickHome,\n        services: this.state.services,\n        servicesOnClick: this.servicesOnClick,\n        selectPetOnClick: this.selectPetOnClick,\n        pets: this.state.pets,\n        checkIn: this.checkIn,\n        appointments: this.state.appointments,\n        handleResultSelect: this.handleResultSelect,\n        handleSearchChange: this.handleSearchChange,\n        isLoading: this.state.isLoading,\n        results: this.state.results,\n        value: this.state.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/form\",\n      render: () => /*#__PURE__*/React.createElement(FormApplication, {\n        addingClient: this.addingClient,\n        clientInfo: this.state.clientInfo,\n        formHandleChange: this.formHandleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/history\",\n      render: () => /*#__PURE__*/React.createElement(History, {\n        pets: this.state.filteredPets,\n        appointments: this.state.appointments,\n        services: this.state.services,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/services/new\",\n      render: () => /*#__PURE__*/React.createElement(ServiceNew, {\n        serviceNew: this.state.serviceNewValue,\n        handleChangeServiceNew: this.handleChangeServiceNew,\n        addingNewService: this.addingNewService,\n        services: this.state.services,\n        serviceOnClickDelete: this.serviceOnClickDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/current\",\n      render: () => /*#__PURE__*/React.createElement(Current, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 56\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/client\",\n      render: () => /*#__PURE__*/React.createElement(Client, {\n        deleteClientHandleClick: this.deleteClientHandleClick,\n        filteredClients: this.state.filteredClients,\n        clients: this.state.clients,\n        addingPetToAClient: this.addingPetToAClient,\n        clientOnClickEdit: this.clientOnClickEdit,\n        clientPetOnClick: this.clientPetOnClick,\n        clientPets: this.state.clientPets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/customnav\",\n      render: () => /*#__PURE__*/React.createElement(CustomNav, {\n        handleItemClick: this.handleItemClick,\n        search: this.state.search,\n        activeItem: this.state.activeItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(SignUp, {\n        handleChange: this.handleChange,\n        accounts: this.state.accounts,\n        addingUser: this.addingUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/addPet\",\n      render: () => /*#__PURE__*/React.createElement(AddPet, {\n        petOnClickEdit: this.petOnClickEdit,\n        petInfo: this.state.petInfo,\n        breeds: this.state.breeds,\n        submitingPet: this.submitingPet,\n        petInfoInputChange: this.petInfoInputChange,\n        clientPets: this.state.clientPets,\n        petBreedOnChange: this.petBreedOnChange,\n        breedName: this.state.breedName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/editPet\",\n      render: () => /*#__PURE__*/React.createElement(EditPet, {\n        petInfo: this.state.petInfo,\n        breeds: this.state.breeds,\n        submitingEditPet: this.submitingEditPet,\n        petInfoInputChange: this.petInfoInputChange,\n        clientPets: this.state.clientPets,\n        petBreedOnChange: this.petBreedOnChange,\n        breedName: this.state.breedName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/editclient\",\n      render: () => /*#__PURE__*/React.createElement(EditClient, {\n        submitingEditClient: this.submitingEditClient,\n        clientInfo: this.state.clientInfo,\n        formHandleChange: this.formHandleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/pet\",\n      render: () => /*#__PURE__*/React.createElement(PetList, {\n        clientPets: this.state.clientPets,\n        clientName: this.state.clientName,\n        petOnClickDelete: this.petOnClickDelete,\n        petOnClickEdit: this.petOnClickEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handleLoginChange: this.handleLoginChange,\n        handleClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(App);\n{\n  /* <div>\n        <div class=\"ui huge header center aligned blue\">K9 Grooming</div>\n        <div class=\"ui grid\">\n          <div class=\"four column\">\n            <CustomNav />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home />} />\n              <Route\n                exact\n                path=\"/form\"\n                render={() => (\n                  <FormApplication\n                    addingClient={this.addingClient}\n                    clientInfo={this.state.clientInfo}\n                    formHandleChange={this.formHandleChange}\n                  />\n                )}\n              />\n              <Route exact path=\"/current\" render={() => <Current />} />\n              <Route\n                exact\n                path=\"/client\"\n                render={() => (\n                  <Client\n                    deletePetHandleClick={this.deletePetHandleClick}\n                    clients={this.state.clients}\n                    addingPetToAClient={this.addingPetToAClient}\n                    clientPetOnClick={this.clientPetOnClick}\n                    clientPets={this.state.clientPets}\n                  />\n                )}\n              />\n              <Route exact path=\"/customnav\" render={() => <CustomNav />} />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => (\n                  <SignUp\n                    handleChange={this.handleChange}\n                    accounts={this.state.accounts}\n                    addingUser={this.addingUser}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/addPet\"\n                render={() => (\n                  <AddPet\n                    petOnClickEdit={this.petOnClickEdit}\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingPet={this.submitingPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/editPet\"\n                render={() => (\n                  <EditPet\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingEditPet={this.submitingEditPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/pet\"\n                render={() => (\n                  <PetList\n                    clientPets={this.state.clientPets}\n                    clientName={this.state.clientName}\n                    petOnClickDelete={this.petOnClickDelete}\n                    petOnClickEdit={this.petOnClickEdit}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div> */\n}","map":{"version":3,"sources":["/Users/a9999/petshop/src/App.js"],"names":["React","Component","Fragment","Home","FormApplication","CustomNav","Current","Client","SignUp","AddPet","PetList","EditPet","EditClient","History","Login","ServiceNew","_","Switch","Route","withRouter","App","state","accounts","username","password","clientInfo","firstname","lastname","homephone","workphone","petInfo","name","color","specialconcerns","rabies","clients","filteredClients","filteredPets","client_id","clientName","breedId","breedName","clientPets","services","serviceId","breeds","clientIdOnSelect","pets","petIdOnSelect","appointments","activeItem","activeItemHome","isLoading","results","value","checkedIn","search","serviceNewValue","curTime","fetchingAllClients","configObj","method","headers","Authorization","localStorage","getItem","fetch","then","resp","json","console","log","setState","fetchingAllBreed","fetchingAllServices","fetchingAllPets","fetchingAllAppointments","submitingPet","event","props","history","push","preventDefault","Accept","body","JSON","stringify","pet","breed_id","fetchingClientPets","submitingEditPet","petId","id","petBreedOnChange","breed","submitingEditClient","c_id","client","e","petInfoInputChange","currentTarget","handleLoginChange","data","login","handleChange","handleChangeServiceNew","addingNewService","service","formHandleChange","handleClick","user","hasOwnProperty","window","setItem","jwt","current_user","error","localUserId","fetchCurrentUser","catch","addingPetToAClient","addingUser","clientPetOnClick","petOnClickDelete","filter","d","serviceOnClickDelete","deleteClientHandleClick","clientId","c","petOnClickEdit","addingClient","r","clientOnClickEdit","servicesOnClick","selectPetOnClick","checkIn","appointment","pet_id","service_id","date","handleResultSelect","result","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","handleItemClick","handleItemClickHome","finishOnClick","appointment_id","appointmentId","a","searchClientsHandleChange","input","target","lowercasedSearchInput","toLowerCase","searchResults","lowercasedClient","includes","nativeEvent","inputType","searchHistoryHandleChange","lowercasedPet","handleClickLogout","clear","componentDidMount","Date","toLocaleDateString","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;;AAEA,MAAMC,GAAN,SAAkBnB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BoB,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,EADF;AAERC,QAAAA,QAAQ,EAAE;AAFF,OADJ;AAKNC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,EADD;AAEVC,QAAAA,QAAQ,EAAE,EAFA;AAGVC,QAAAA,SAAS,EAAE,EAHD;AAIVC,QAAAA,SAAS,EAAE;AAJD,OALN;AAWNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,KAAK,EAAE,EAFA;AAGPC,QAAAA,eAAe,EAAE,EAHV;AAIPC,QAAAA,MAAM,EAAE;AAJD,OAXH;AAiBNC,MAAAA,OAAO,EAAE,EAjBH;AAkBNC,MAAAA,eAAe,EAAE,EAlBX;AAmBNC,MAAAA,YAAY,EAAE,EAnBR;AAoBNC,MAAAA,SAAS,EAAE,EApBL;AAqBNC,MAAAA,UAAU,EAAE,EArBN;AAsBNC,MAAAA,OAAO,EAAE,EAtBH;AAuBNC,MAAAA,SAAS,EAAE,EAvBL;AAwBNC,MAAAA,UAAU,EAAE,EAxBN;AAyBNC,MAAAA,QAAQ,EAAE,EAzBJ;AA0BNC,MAAAA,SAAS,EAAE,EA1BL;AA2BNC,MAAAA,MAAM,EAAE,EA3BF;AA4BNC,MAAAA,gBAAgB,EAAE,EA5BZ;AA6BNC,MAAAA,IAAI,EAAE,EA7BA;AA8BNC,MAAAA,aAAa,EAAE,EA9BT;AA+BNC,MAAAA,YAAY,EAAE,EA/BR;AAiCNC,MAAAA,UAAU,EAAE,MAjCN;AAkCNC,MAAAA,cAAc,EAAE,gBAlCV;AAoCNC,MAAAA,SAAS,EAAE,KApCL;AAqCNC,MAAAA,OAAO,EAAE,EArCH;AAsCNC,MAAAA,KAAK,EAAE,EAtCD;AAuCNC,MAAAA,SAAS,EAAE,EAvCL;AAwCNC,MAAAA,MAAM,EAAE,EAxCF;AAyCNC,MAAAA,eAAe,EAAE,EAzCX;AA0CNC,MAAAA,OAAO,EAAE;AA1CH,KADkB;;AAAA,SA0D1BC,kBA1D0B,GA0DL,MAAM;AACzB,UAAIC,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,kDAAF,EAAqDN,SAArD,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAEShC,OAAD,IAAa;AACjBmC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CpC,OAA1C;AACA,aAAKqC,QAAL,CAAc;AACZrC,UAAAA,OAAO,EAAEA,OADG;AAEZC,UAAAA,eAAe,EAAED;AAFL,SAAd;AAID,OARH;AASD,KA3EyB;;AAAA,SA6E1BsC,gBA7E0B,GA6EP,MAAM;AACvB,UAAIb,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,8BAAF,EAAiCN,SAAjC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAEStB,MAAD,IAAY;AAChB,aAAK2B,QAAL,CAAc;AACZ3B,UAAAA;AADY,SAAd;AAGD,OANH;AAOD,KA5FyB;;AAAA,SA8F1B6B,mBA9F0B,GA8FJ,MAAM;AAC1B,UAAId,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,gCAAF,EAAmCN,SAAnC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESxB,QAAD,IAAc;AAClB,aAAK6B,QAAL,CAAc;AACZ7B,UAAAA;AADY,SAAd;AAGD,OANH;AAOD,KA7GyB;;AAAA,SA+G1BgC,eA/G0B,GA+GR,MAAM;AACtB,UAAIf,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,4BAAF,EAA+BN,SAA/B,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESpB,IAAD,IAAU;AACd,aAAKyB,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEA,IADM;AAEZV,UAAAA,YAAY,EAAEU;AAFF,SAAd;AAID,OAPH;AAQD,KA/HyB;;AAAA,SAiI1B6B,uBAjI0B,GAiIA,MAAM;AAC9B,UAAIhB,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,oCAAF,EAAuCN,SAAvC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESlB,YAAD,IAAkB;AACtB,aAAKuB,QAAL,CAAc;AACZvB,UAAAA;AADY,SAAd;AAGD,OANH;AAOD,KAhJyB;;AAAA,SAkJ1B4B,YAlJ0B,GAkJVC,KAAD,IAAW;AACxB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,KAAxB;AACA,YAAM;AAAEnD,QAAAA,OAAF;AAAWU,QAAAA,OAAX;AAAoBF,QAAAA;AAApB,UAAkC,KAAKjB,KAA7C;AACAiD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BzC,OAA9B;AACAgD,MAAAA,KAAK,CAACI,cAAN;AACA,YAAMtB,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAE;AACHxD,YAAAA,IAAI,EAAED,OAAO,CAACC,IADX;AAEHC,YAAAA,KAAK,EAAEF,OAAO,CAACE,KAFZ;AAGHC,YAAAA,eAAe,EAAEH,OAAO,CAACG,eAHtB;AAIHC,YAAAA,MAAM,EAAEJ,OAAO,CAACI,MAJb;AAKHsD,YAAAA,QAAQ,EAAEhD,OALP;AAMHF,YAAAA,SAAS,EAAEA;AANR;AADc,SAAf;AANU,OAAlB;AAiBA4B,MAAAA,KAAK,CAAE,4BAAF,EAA+BN,SAA/B,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESoB,GAAD,IAAS;AACb,aAAKf,QAAL,CAAc;AACZ1C,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,EADC;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,eAAe,EAAE,EAHV;AAIPC,YAAAA,MAAM,EAAE;AAJD;AADG,SAAd;AAQA,cAAMI,SAAS,GAAG,KAAKjB,KAAL,CAAWiB,SAA7B;AACA,aAAKmD,kBAAL,CAAwBnD,SAAxB;AACA,aAAKqC,eAAL;AACD,OAdH;AAeD,KAvLyB;;AAAA,SAyL1Be,gBAzL0B,GAyLNZ,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAEpD,QAAAA,OAAF;AAAWQ,QAAAA,SAAX;AAAsBE,QAAAA;AAAtB,UAAkC,KAAKnB,KAA7C;AACA,YAAMsE,KAAK,GAAG7D,OAAO,CAAC8D,EAAtB;AACA,YAAMhC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAE;AACHxD,YAAAA,IAAI,EAAED,OAAO,CAACC,IADX;AAEHC,YAAAA,KAAK,EAAEF,OAAO,CAACE,KAFZ;AAGHC,YAAAA,eAAe,EAAEH,OAAO,CAACG,eAHtB;AAIHC,YAAAA,MAAM,EAAEJ,OAAO,CAACI,MAJb;AAKHsD,YAAAA,QAAQ,EAAEhD,OALP;AAMHF,YAAAA,SAAS,EAAEA;AANR;AADc,SAAf;AANU,OAAlB;AAiBA4B,MAAAA,KAAK,CAAE,8BAA6ByB,KAAM,EAArC,EAAwC/B,SAAxC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESoB,GAAD,IAAS;AACbjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACA,aAAKE,kBAAL,CAAwBnD,SAAxB;AACA,aAAKkC,QAAL,CAAc;AACZ1C,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE,EADC;AAEPC,YAAAA,KAAK,EAAE,EAFA;AAGPC,YAAAA,eAAe,EAAE,EAHV;AAIPC,YAAAA,MAAM,EAAE;AAJD;AADG,SAAd;AAQD,OAbH;AAcA,WAAK6C,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACD,KA7NyB;;AAAA,SA8N1BY,gBA9N0B,GA8NNC,KAAD,IAAW;AAC5B,YAAMtD,OAAO,GAAGsD,KAAK,CAACF,EAAtB;AACA,YAAMnD,SAAS,GAAGqD,KAAK,CAAC/D,IAAxB;AACA,WAAKyC,QAAL,CAAc;AAAEhC,QAAAA;AAAF,OAAd;AACA,WAAKgC,QAAL,CAAc;AAAE/B,QAAAA;AAAF,OAAd;AACD,KAnOyB;;AAAA,SAqO1BsD,mBArO0B,GAqOHjB,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAEzD,QAAAA,UAAF;AAAca,QAAAA;AAAd,UAA4B,KAAKjB,KAAvC;AACA,YAAM2E,IAAI,GAAGvE,UAAU,CAACmE,EAAxB;AACA,YAAMhC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBW,UAAAA,MAAM,EAAE;AACNtE,YAAAA,QAAQ,EAAEF,UAAU,CAACE,QADf;AAEND,YAAAA,SAAS,EAAED,UAAU,CAACC,SAFhB;AAGNE,YAAAA,SAAS,EAAEH,UAAU,CAACG,SAHhB;AAINC,YAAAA,SAAS,EAAEJ,UAAU,CAACI;AAJhB;AADW,SAAf;AANU,OAAlB;AAeAqC,MAAAA,KAAK,CAAE,iCAAgC8B,IAAK,EAAvC,EAA0CpC,SAA1C,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESoB,GAAD,IAAS;AACbjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACA,aAAKE,kBAAL,CAAwBnD,SAAxB;AACA,aAAKkC,QAAL,CAAc;AACZ/C,UAAAA,UAAU,EAAE;AACVC,YAAAA,SAAS,EAAE,EADD;AAEVC,YAAAA,QAAQ,EAAE,EAFA;AAGVC,YAAAA,SAAS,EAAE,EAHD;AAIVC,YAAAA,SAAS,EAAE;AAJD;AADA,SAAd;AAQA,aAAK8B,kBAAL;AACD,OAdH;AAeA,WAAKoB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAxQyB;;AAAA,SAyQ1BY,gBAzQ0B,GAyQP,CAACK,CAAD,EAAIJ,KAAJ,KAAc;AAC/BxB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuB,KAAK,CAACxC,KAAlC;AACA,YAAMd,OAAO,GAAGsD,KAAK,CAACxC,KAAtB;AACA,YAAMb,SAAS,GAAGqD,KAAK,CAAC/D,IAAxB;AACA,WAAKyC,QAAL,CAAc;AAAEhC,QAAAA;AAAF,OAAd;AACA,WAAKgC,QAAL,CAAc;AAAE/B,QAAAA;AAAF,OAAd;AACD,KA/QyB;;AAAA,SAiR1B0D,kBAjR0B,GAiRJrB,KAAD,IAAW;AAC9B,YAAMhD,OAAO,GAAG,EAAE,GAAG,KAAKT,KAAL,CAAWS;AAAhB,OAAhB;AACAA,MAAAA,OAAO,CAACgD,KAAK,CAACsB,aAAN,CAAoBrE,IAArB,CAAP,GAAoC+C,KAAK,CAACsB,aAAN,CAAoB9C,KAAxD;AACA,WAAKkB,QAAL,CAAc;AAAE1C,QAAAA;AAAF,OAAd;AACD,KArRyB;;AAAA,SAuR1BuE,iBAvR0B,GAuRN,CAACH,CAAD,EAAII,IAAJ,KAAa;AAC/B,YAAMC,KAAK,GAAG,EAAE,GAAG,KAAKlF,KAAL,CAAWkF;AAAhB,OAAd;AACAA,MAAAA,KAAK,CAACL,CAAC,CAACE,aAAF,CAAgBrE,IAAjB,CAAL,GAA8BmE,CAAC,CAACE,aAAF,CAAgB9C,KAA9C;AACA,WAAKkB,QAAL,CAAc;AAAE+B,QAAAA;AAAF,OAAd;AACD,KA3RyB;;AAAA,SA6R1BC,YA7R0B,GA6RV1B,KAAD,IAAW;AACxB,YAAMxD,QAAQ,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAjB;AACAA,MAAAA,QAAQ,CAACwD,KAAK,CAACsB,aAAN,CAAoBrE,IAArB,CAAR,GAAqC+C,KAAK,CAACsB,aAAN,CAAoB9C,KAAzD;AACA,WAAKkB,QAAL,CAAc;AAAElD,QAAAA;AAAF,OAAd;AACD,KAjSyB;;AAAA,SAmS1BmF,sBAnS0B,GAmSA3B,KAAD,IAAW;AAClC,YAAMrB,eAAe,GAAG,EAAE,GAAG,KAAKpC,KAAL,CAAWoC;AAAhB,OAAxB;AACAA,MAAAA,eAAe,CAACqB,KAAK,CAACsB,aAAN,CAAoBrE,IAArB,CAAf,GAA4C+C,KAAK,CAACsB,aAAN,CAAoB9C,KAAhE;AACA,WAAKkB,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACD,KAvSyB;;AAAA,SAyS1BiD,gBAzS0B,GAySP,CAAC5B,KAAD,EAAQwB,IAAR,KAAiB;AAClCxB,MAAAA,KAAK,CAACI,cAAN;AAEA,YAAM;AAAEzB,QAAAA;AAAF,UAAsB,KAAKpC,KAAjC;AACA,YAAMuC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBqB,UAAAA,OAAO,EAAE;AACP5E,YAAAA,IAAI,EAAE0B,eAAe,CAAC1B;AADf;AADU,SAAf;AANU,OAAlB;AAYAmC,MAAAA,KAAK,CAAE,gCAAF,EAAmCN,SAAnC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,aAAKU,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,aAAKP,mBAAL;AACA,aAAKF,QAAL,CAAc;AACZf,UAAAA,eAAe,EAAE;AACf1B,YAAAA,IAAI,EAAE;AADS;AADL,SAAd;AAKD,OAXH;AAYD,KArUyB;;AAAA,SAuU1B6E,gBAvU0B,GAuUN9B,KAAD,IAAW;AAC5B,YAAMrD,UAAU,GAAG,EAAE,GAAG,KAAKJ,KAAL,CAAWI;AAAhB,OAAnB;AACAA,MAAAA,UAAU,CAACqD,KAAK,CAACsB,aAAN,CAAoBrE,IAArB,CAAV,GAAuC+C,KAAK,CAACsB,aAAN,CAAoB9C,KAA3D;AACA,WAAKkB,QAAL,CAAc;AAAE/C,QAAAA;AAAF,OAAd;AACD,KA3UyB;;AAAA,SA6U1BoF,WA7U0B,GA6UX/B,KAAD,IAAW;AACvB,YAAM;AAAEyB,QAAAA;AAAF,UAAY,KAAKlF,KAAvB;AACAiD,MAAAA,OAAO,CAACC,GAAR,CAAYgC,KAAZ;AACAzB,MAAAA,KAAK,CAACI,cAAN;AACA,YAAMtB,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBwB,UAAAA,IAAI,EAAE;AACJvF,YAAAA,QAAQ,EAAEgF,KAAK,CAAChF,QADZ;AAEJC,YAAAA,QAAQ,EAAE+E,KAAK,CAAC/E;AAFZ;AADa,SAAf;AANU,OAAlB;AAaA0C,MAAAA,KAAK,CAAE,iCAAF,EAAoCN,SAApC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,YAAI,CAACA,IAAI,CAAC0C,cAAL,CAAoB,OAApB,CAAL,EAAmC;AACjCC,UAAAA,MAAM,CAAChD,YAAP,CAAoBiD,OAApB,CAA4B,OAA5B,EAAqC5C,IAAI,CAAC6C,GAA1C;AACAF,UAAAA,MAAM,CAAChD,YAAP,CAAoBiD,OAApB,CAA4B,UAA5B,EAAwC5C,IAAI,CAACyC,IAAL,CAAUvF,QAAlD;AACAyF,UAAAA,MAAM,CAAChD,YAAP,CAAoBiD,OAApB,CAA4B,QAA5B,EAAuC,GAAE5C,IAAI,CAACyC,IAAL,CAAUlB,EAAG,EAAtD,EAHiC,CAIjC;;AACA,eAAKpB,QAAL,CAAc;AAAE2C,YAAAA,YAAY,EAAE9C,IAAI,CAACyC;AAArB,WAAd,EALiC,CAMjC;AACD,SAPD,MAOO;AACL,eAAKtC,QAAL,CAAc;AAAE4C,YAAAA,KAAK,EAAE/C,IAAI,CAAC+C;AAAd,WAAd;AACD;AACF,OAdH,EAeGjD,IAfH,CAeSmC,IAAD,IAAU;AACd,cAAMe,WAAW,GAAGrD,YAAY,CAACC,OAAb,CAAqB,QAArB,CAApB;;AAEA,YAAIoD,WAAJ,EAAiB;AACf,eAAKC,gBAAL,CAAsBD,WAAtB;AACD;AACF,OArBH,EAsBGE,KAtBH,CAsBUH,KAAD,IAAW9C,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAtBpB;AAuBA,WAAKC,QAAL,CAAc;AACZjD,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAIA,WAAKkD,mBAAL;AACA,WAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KA3XyB;;AAAA,SA6X1BQ,kBA7X0B,GA6XJnD,SAAD,IAAe;AAClCgC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIX,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,KADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB;AAFK,OAAhB;AAOAC,MAAAA,KAAK,CAAE,iCAAgC5B,SAAU,EAA5C,EAA+CsB,SAA/C,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESpB,IAAD,IAAU;AACduB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BxB,IAA3B;AACA,aAAKyB,QAAL,CAAc;AACZ9B,UAAAA,UAAU,EAAEK;AADA,SAAd;AAGD,OAPH;AAQD,KA9YyB;;AAAA,SAgZ1ByE,kBAhZ0B,GAgZJvB,MAAD,IAAY;AAC/B,YAAM3D,SAAS,GAAG2D,MAAM,CAACL,EAAzB;AACA,WAAKH,kBAAL,CAAwBnD,SAAxB;AACA,WAAKkC,QAAL,CAAc;AAAElC,QAAAA;AAAF,OAAd;AACA,WAAKkC,QAAL,CAAc;AAAEjC,QAAAA,UAAU,EAAE0D,MAAM,CAACvE;AAArB,OAAd;AACA,WAAKqD,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAtZyB;;AAAA,SAwZ1BwC,UAxZ0B,GAwZb,CAAC3C,KAAD,EAAQwB,IAAR,KAAiB;AAC5BxB,MAAAA,KAAK,CAACI,cAAN;AAEA,YAAM;AAAE5D,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMuC,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBwB,UAAAA,IAAI,EAAE;AACJvF,YAAAA,QAAQ,EAAED,QAAQ,CAACC,QADf;AAEJC,YAAAA,QAAQ,EAAEF,QAAQ,CAACE;AAFf;AADa,SAAf;AANU,OAAlB;AAaA0C,MAAAA,KAAK,CAAE,iCAAF,EAAoCN,SAApC,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,aAAKU,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OALH;AAMD,KA/ayB;;AAAA,SAib1ByC,gBAjb0B,GAibNzB,MAAD,IAAY;AAC7B,YAAM3D,SAAS,GAAG2D,MAAM,CAACL,EAAzB;AACA,WAAKH,kBAAL,CAAwBnD,SAAxB;AACA,WAAKkC,QAAL,CAAc;AAAElC,QAAAA;AAAF,OAAd;AACA,WAAKkC,QAAL,CAAc;AAAEjC,QAAAA,UAAU,EAAE0D,MAAM,CAACvE;AAArB,OAAd;AACA,WAAKqD,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACD,KAvbyB;;AAAA,SAyb1B0C,gBAzb0B,GAybNpC,GAAD,IAAS;AAC1BjB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMoB,KAAK,GAAGJ,GAAG,CAACK,EAAlB;AACA,YAAM7C,IAAI,GAAG,KAAK1B,KAAL,CAAWqB,UAAX,CAAsBkF,MAAtB,CAA8BC,CAAD,IAAOA,CAAC,CAACjC,EAAF,KAASD,KAA7C,CAAb;AACA,WAAKnB,QAAL,CAAc;AAAE9B,QAAAA,UAAU,EAAEK;AAAd,OAAd;AACAmB,MAAAA,KAAK,CAAE,8BAA6ByB,KAAM,EAArC,EAAwC;AAC3C9B,QAAAA,MAAM,EAAE;AADmC,OAAxC,CAAL;AAGA,WAAKc,eAAL;AACD,KAlcyB;;AAAA,SAoc1BmD,oBApc0B,GAocFnB,OAAD,IAAa;AAClCrC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBoC,OAAO,CAACf,EAA/B;AACA,YAAMhD,SAAS,GAAG+D,OAAO,CAACf,EAA1B;AACA,YAAMjD,QAAQ,GAAG,KAAKtB,KAAL,CAAWsB,QAAX,CAAoBiF,MAApB,CAA4BC,CAAD,IAAOA,CAAC,CAACjC,EAAF,KAAShD,SAA3C,CAAjB;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY5B,QAAZ;AACA,WAAK6B,QAAL,CAAc;AAAE7B,QAAAA;AAAF,OAAd;AACAuB,MAAAA,KAAK,CAAE,kCAAiCtB,SAAU,EAA7C,EAAgD;AACnDiB,QAAAA,MAAM,EAAE;AAD2C,OAAhD,CAAL;AAGA,WAAKa,mBAAL;AACD,KA9cyB;;AAAA,SAgd1BqD,uBAhd0B,GAgdC9B,MAAD,IAAY;AACpC,YAAM+B,QAAQ,GAAG/B,MAAM,CAACL,EAAxB;AACA,YAAMzD,OAAO,GAAG,KAAKd,KAAL,CAAWc,OAAX,CAAmByF,MAAnB,CAA2BK,CAAD,IAAOA,CAAC,CAACrC,EAAF,KAASoC,QAA1C,CAAhB;AACA,WAAKxD,QAAL,CAAc;AAAErC,QAAAA;AAAF,OAAd;AACA+B,MAAAA,KAAK,CAAE,iCAAgC8D,QAAS,EAA3C,EAA8C;AACjDnE,QAAAA,MAAM,EAAE;AADyC,OAA9C,CAAL;AAGA,WAAKF,kBAAL;AACD,KAxdyB;;AAAA,SA0d1BuE,cA1d0B,GA0dR3C,GAAD,IAAS;AACxB,WAAKf,QAAL,CAAc;AAAE1C,QAAAA,OAAO,EAAEyD;AAAX,OAAd;AACA,WAAKR,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KA7dyB;;AAAA,SA+d1BkD,YA/d0B,GA+dVrD,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAM;AAAEzD,QAAAA;AAAF,UAAiB,KAAKJ,KAA5B;AACA6C,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCL,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAF4B;AAMrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBW,UAAAA,MAAM,EAAE;AACNtE,YAAAA,QAAQ,EAAEF,UAAU,CAACE,QADf;AAEND,YAAAA,SAAS,EAAED,UAAU,CAACC,SAFhB;AAGNE,YAAAA,SAAS,EAAEH,UAAU,CAACG,SAHhB;AAINC,YAAAA,SAAS,EAAEJ,UAAU,CAACI;AAJhB;AADW,SAAf;AAN+B,OAAlC,CAAL,CAeGsC,IAfH,CAeSiE,CAAD,IAAOA,CAAC,CAAC/D,IAAF,EAff,EAgBGF,IAhBH,CAgBS8B,MAAD,IAAY;AAChB3B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC0B,MAAhC;AACA,aAAKzB,QAAL,CAAc;AACZ/C,UAAAA,UAAU,EAAE;AACVC,YAAAA,SAAS,EAAE,EADD;AAEVC,YAAAA,QAAQ,EAAE,EAFA;AAGVC,YAAAA,SAAS,EAAE,EAHD;AAIVC,YAAAA,SAAS,EAAE;AAJD;AADA,SAAd;AAQA,aAAK8B,kBAAL;AACD,OA3BH;AA4BA,WAAKoB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KA/fyB;;AAAA,SAigB1BoD,iBAjgB0B,GAigBL5G,UAAD,IAAgB;AAClC,WAAK+C,QAAL,CAAc;AAAE/C,QAAAA;AAAF,OAAd;AACA,WAAKsD,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACD,KApgByB;;AAAA,SAsgB1BqD,eAtgB0B,GAsgBR,CAACpC,CAAD,EAAIS,OAAJ,KAAgB;AAChCrC,MAAAA,OAAO,CAACC,GAAR,CAAY2B,CAAZ;AACA5B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BoC,OAAO,CAACrD,KAAnC;AAEA,YAAMV,SAAS,GAAG+D,OAAO,CAACrD,KAA1B;AACA,WAAKkB,QAAL,CAAc;AAAE5B,QAAAA;AAAF,OAAd;AACD,KA5gByB;;AAAA,SA8gB1B2F,gBA9gB0B,GA8gBP,CAACrC,CAAD,EAAIX,GAAJ,KAAY;AAC7BjB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBgB,GAAG,CAACjC,KAA3B;AAEA,YAAMN,aAAa,GAAGuC,GAAG,CAACjC,KAA1B;AACA,WAAKkB,QAAL,CAAc;AAAExB,QAAAA;AAAF,OAAd;AACD,KAnhByB;;AAAA,SAqhB1BwF,OArhB0B,GAqhBf1D,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACI,cAAN;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,KAArB;AACAZ,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CL,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFiC;AAM1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBmD,UAAAA,WAAW,EAAE;AACXC,YAAAA,MAAM,EAAE,KAAKrH,KAAL,CAAW2B,aADR;AAEX2F,YAAAA,UAAU,EAAE,KAAKtH,KAAL,CAAWuB,SAFZ;AAGXgG,YAAAA,IAAI,EAAE,KAAKvH,KAAL,CAAWqC;AAHN;AADM,SAAf;AANoC,OAAvC,CAAL,CAcGS,IAdH,CAcSiE,CAAD,IAAOA,CAAC,CAAC/D,IAAF,EAdf,EAeGF,IAfH,CAeSlB,YAAD,IAAkB;AACtBqB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCtB,YAAhC;AACA,aAAKuB,QAAL,CAAc;AACZvB,UAAAA,YAAY,EAAE,CAAC,GAAG,KAAK5B,KAAL,CAAW4B,YAAf,EAA6BA,YAA7B,CADF;AAEZE,UAAAA,cAAc,EAAE;AAFJ,SAAd;AAIAmB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKlD,KAAL,CAAW4B,YAA9C;AACA,aAAK2B,uBAAL;AACA,aAAKD,eAAL;AACD,OAxBH;AAyBD,KAjjByB;;AAAA,SAmjB1BkE,kBAnjB0B,GAmjBL,CAAC3C,CAAD,EAAI;AAAE4C,MAAAA;AAAF,KAAJ,KAAmB;AACtC,WAAKtE,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAAEwF,MAAM,CAAC/G;AAAhB,OAAd;AACD,KArjByB;;AAAA,SAujB1BgH,kBAvjB0B,GAujBL,CAAC7C,CAAD,EAAI;AAAE5C,MAAAA;AAAF,KAAJ,KAAkB;AACrC,WAAKkB,QAAL,CAAc;AAAEpB,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA;AAAnB,OAAd;AAEA0F,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAK3H,KAAL,CAAWiC,KAAX,CAAiB2F,MAAjB,GAA0B,CAA9B,EACE,OAAO,KAAKzE,QAAL,CAAc;AAAEpB,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,OAAO,EAAE,EAA7B;AAAiCC,UAAAA,KAAK,EAAE;AAAxC,SAAd,CAAP;AAEF,cAAM4F,EAAE,GAAG,IAAIC,MAAJ,CAAWnI,CAAC,CAACoI,YAAF,CAAe,KAAK/H,KAAL,CAAWiC,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,cAAM+F,OAAO,GAAIP,MAAD,IAAYI,EAAE,CAACI,IAAH,CAAQR,MAAM,CAAC/G,IAAf,CAA5B;;AAEA,aAAKyC,QAAL,CAAc;AACZpB,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAErC,CAAC,CAAC4G,MAAF,CAAS,KAAKvG,KAAL,CAAW0B,IAApB,EAA0BsG,OAA1B;AAFG,SAAd;AAID,OAXS,EAWP,GAXO,CAAV;AAYD,KAtkByB;;AAAA,SAwkB1BE,eAxkB0B,GAwkBR,CAACrD,CAAD,EAAI;AAAEnE,MAAAA;AAAF,KAAJ,KAAiB;AACjC,WAAKyC,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAEnB;AAAd,OAAd;;AAEA,UAAIA,IAAI,KAAK,SAAb,EAAwB;AACtB,aAAK4C,eAAL;AACD;AACF,KA9kByB;;AAAA,SAglB1B6E,mBAhlB0B,GAglBJ,CAACtD,CAAD,EAAI;AAAEnE,MAAAA;AAAF,KAAJ,KACpB,KAAKyC,QAAL,CAAc;AAAErB,MAAAA,cAAc,EAAEpB;AAAlB,KAAd,CAjlBwB;;AAAA,SAmlB1B0H,aAnlB0B,GAmlBTnD,IAAD,IAAU;AACxBhC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B+B,IAA7B;AACA,YAAM1C,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAE,KADQ;AAEhBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPqB,UAAAA,MAAM,EAAE;AAFD,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBmD,UAAAA,WAAW,EAAE;AACXiB,YAAAA,cAAc,EAAEpD,IAAI,CAACqD;AADV;AADM,SAAf;AANU,OAAlB;AAYAzF,MAAAA,KAAK,CAAE,sCAAqCoC,IAAI,CAACqD,aAAc,EAA1D,EAA6D/F,SAA7D,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESyF,CAAD,IAAO;AACXtF,QAAAA,OAAO,CAACC,GAAR,CAAYqF,CAAZ;AACA,aAAKhF,uBAAL;AACD,OALH;AAMD,KAvmByB;;AAAA,SAymB1BiF,yBAzmB0B,GAymBE,CAACC,KAAD,EAAQ5D,CAAR,KAAc;AACxC5B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuF,KAArB;AACAxF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB2B,CAAjB;AAEA,WAAK1B,QAAL,CAAc;AAAEhB,QAAAA,MAAM,EAAEsG,KAAK,CAACC,MAAN,CAAazG;AAAvB,OAAd;AAEA,YAAM0G,qBAAqB,GAAG,KAAK3I,KAAL,CAAWmC,MAAX,CAAkByG,WAAlB,EAA9B;AACA3F,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCyF,qBAAvC;AAEA,YAAME,aAAa,GAAG,KAAK7I,KAAL,CAAWc,OAAX,CAAmByF,MAAnB,CAA2B3B,MAAD,IAAY;AAC1D,YAAIkE,gBAAgB,GAAGlE,MAAM,CAACvE,SAAP,CAAiBuI,WAAjB,EAAvB;AACA,eAAOE,gBAAgB,CAACC,QAAjB,CAA0BJ,qBAA1B,CAAP;AACD,OAHqB,CAAtB;AAIA1F,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B2F,aAA9B;AAEA,WAAK1F,QAAL,CAAc;AACZpC,QAAAA,eAAe,EAAE8H;AADL,OAAd;;AAIA,UAAIJ,KAAK,CAACO,WAAN,CAAkBC,SAAlB,KAAgC,uBAApC,EAA6D;AAC3D,aAAK3G,kBAAL;AACD;AACF,KA/nByB;;AAAA,SAioB1B4G,yBAjoB0B,GAioBE,CAACT,KAAD,EAAQ5D,CAAR,KAAc;AACxC,WAAK1B,QAAL,CAAc;AAAEhB,QAAAA,MAAM,EAAEsG,KAAK,CAACC,MAAN,CAAazG;AAAvB,OAAd;AAEA,YAAM0G,qBAAqB,GAAG,KAAK3I,KAAL,CAAWmC,MAAX,CAAkByG,WAAlB,EAA9B;AACA3F,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCyF,qBAAvC;AAEA,YAAME,aAAa,GAAG,KAAK7I,KAAL,CAAW0B,IAAX,CAAgB6E,MAAhB,CAAwBrC,GAAD,IAAS;AACpD,YAAIiF,aAAa,GAAGjF,GAAG,CAACxD,IAAJ,CAASkI,WAAT,EAApB;AACA,eAAOO,aAAa,CAACJ,QAAd,CAAuBJ,qBAAvB,CAAP;AACD,OAHqB,CAAtB;AAIA1F,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B2F,aAA9B;AAEA,WAAK1F,QAAL,CAAc;AACZnC,QAAAA,YAAY,EAAE6H;AADF,OAAd;;AAIA,UAAIJ,KAAK,CAACO,WAAN,CAAkBC,SAAlB,KAAgC,uBAApC,EAA6D;AAC3D,aAAK3F,eAAL;AACD;AACF,KAppByB;;AAAA,SAspB1B8F,iBAtpB0B,GAspBL3F,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACI,cAAN;AACAlB,MAAAA,YAAY,CAAC0G,KAAb;AACA,WAAK3F,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KA1pByB;AAAA;;AA8C1B0F,EAAAA,iBAAiB,GAAG;AAClB,SAAKhH,kBAAL;AACA,SAAKiB,uBAAL;AACA,SAAKH,gBAAL;AACA,SAAKE,eAAL;AACA,SAAKD,mBAAL;AAEA,SAAKF,QAAL,CAAc;AACZd,MAAAA,OAAO,EAAE,IAAIkH,IAAJ,GAAWC,kBAAX;AADG,KAAd;AAGD;;AAomBDC,EAAAA,MAAM,GAAG;AACPxG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKlD,KAAL,CAAW0B,IAA/B;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,oCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,eAAe,EAAE,KAAKwG,eADxB;AAEE,MAAA,UAAU,EAAE,KAAKlI,KAAL,CAAW6B,UAFzB;AAGE,MAAA,yBAAyB,EAAE,KAAK2G,yBAHlC;AAIE,MAAA,yBAAyB,EAAE,KAAKU,yBAJlC;AAKE,MAAA,iBAAiB,EAAE,KAAKE,iBAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAgBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,IAAD;AACE,QAAA,cAAc,EAAE,KAAKpJ,KAAL,CAAW8B,cAD7B;AAEE,QAAA,aAAa,EAAE,KAAKsG,aAFtB;AAGE,QAAA,mBAAmB,EAAE,KAAKD,mBAH5B;AAIE,QAAA,QAAQ,EAAE,KAAKnI,KAAL,CAAWsB,QAJvB;AAKE,QAAA,eAAe,EAAE,KAAK2F,eALxB;AAME,QAAA,gBAAgB,EAAE,KAAKC,gBANzB;AAOE,QAAA,IAAI,EAAE,KAAKlH,KAAL,CAAW0B,IAPnB;AAQE,QAAA,OAAO,EAAE,KAAKyF,OARhB;AASE,QAAA,YAAY,EAAE,KAAKnH,KAAL,CAAW4B,YAT3B;AAUE,QAAA,kBAAkB,EAAE,KAAK4F,kBAV3B;AAWE,QAAA,kBAAkB,EAAE,KAAKE,kBAX3B;AAYE,QAAA,SAAS,EAAE,KAAK1H,KAAL,CAAW+B,SAZxB;AAaE,QAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWgC,OAbtB;AAcE,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWiC,KAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAuBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,eAAD;AACE,QAAA,YAAY,EAAE,KAAK6E,YADrB;AAEE,QAAA,UAAU,EAAE,KAAK9G,KAAL,CAAWI,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKmF,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,eAkCE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,OAAD;AACE,QAAA,IAAI,EAAE,KAAKvF,KAAL,CAAWgB,YADnB;AAEE,QAAA,YAAY,EAAE,KAAKhB,KAAL,CAAW4B,YAF3B;AAGE,QAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWsB,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,eA6CE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,UAAD;AACE,QAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWoC,eADzB;AAEE,QAAA,sBAAsB,EAAE,KAAKgD,sBAF/B;AAGE,QAAA,gBAAgB,EAAE,KAAKC,gBAHzB;AAIE,QAAA,QAAQ,EAAE,KAAKrF,KAAL,CAAWsB,QAJvB;AAKE,QAAA,oBAAoB,EAAE,KAAKmF,oBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CF,eA0DE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,MAAM,EAAE,mBAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,eA2DE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,uBAAuB,EAAE,KAAKC,uBADhC;AAEE,QAAA,eAAe,EAAE,KAAK1G,KAAL,CAAWe,eAF9B;AAGE,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWc,OAHtB;AAIE,QAAA,kBAAkB,EAAE,KAAKqF,kBAJ3B;AAKE,QAAA,iBAAiB,EAAE,KAAKa,iBAL1B;AAME,QAAA,gBAAgB,EAAE,KAAKX,gBANzB;AAOE,QAAA,UAAU,EAAE,KAAKrG,KAAL,CAAWqB,UAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,eA0EE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,SAAD;AACE,QAAA,eAAe,EAAE,KAAK6G,eADxB;AAEE,QAAA,MAAM,EAAE,KAAKlI,KAAL,CAAWmC,MAFrB;AAGE,QAAA,UAAU,EAAE,KAAKnC,KAAL,CAAW6B,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1EF,eAqFE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,YAAY,EAAE,KAAKsD,YADrB;AAEE,QAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWC,QAFvB;AAGE,QAAA,UAAU,EAAE,KAAKmG,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArFF,eAgGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AACE,QAAA,cAAc,EAAE,KAAKS,cADvB;AAEE,QAAA,OAAO,EAAE,KAAK7G,KAAL,CAAWS,OAFtB;AAGE,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWwB,MAHrB;AAIE,QAAA,YAAY,EAAE,KAAKgC,YAJrB;AAKE,QAAA,kBAAkB,EAAE,KAAKsB,kBAL3B;AAME,QAAA,UAAU,EAAE,KAAK9E,KAAL,CAAWqB,UANzB;AAOE,QAAA,gBAAgB,EAAE,KAAKmD,gBAPzB;AAQE,QAAA,SAAS,EAAE,KAAKxE,KAAL,CAAWoB,SARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhGF,eAgHE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWS,OADtB;AAEE,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWwB,MAFrB;AAGE,QAAA,gBAAgB,EAAE,KAAK6C,gBAHzB;AAIE,QAAA,kBAAkB,EAAE,KAAKS,kBAJ3B;AAKE,QAAA,UAAU,EAAE,KAAK9E,KAAL,CAAWqB,UALzB;AAME,QAAA,gBAAgB,EAAE,KAAKmD,gBANzB;AAOE,QAAA,SAAS,EAAE,KAAKxE,KAAL,CAAWoB,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhHF,eA+HE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,UAAD;AACE,QAAA,mBAAmB,EAAE,KAAKsD,mBAD5B;AAEE,QAAA,UAAU,EAAE,KAAK1E,KAAL,CAAWI,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKmF,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/HF,eA0IE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE,KAAKvF,KAAL,CAAWqB,UADzB;AAEE,QAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWkB,UAFzB;AAGE,QAAA,gBAAgB,EAAE,KAAKoF,gBAHzB;AAIE,QAAA,cAAc,EAAE,KAAKO,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1IF,eAsJE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAE,mBACN,oBAAC,KAAD;AACE,QAAA,iBAAiB,EAAE,KAAK7B,iBAD1B;AAEE,QAAA,WAAW,EAAE,KAAKQ,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtJF,CADF,CAhBF,CADF;AAsLD;;AAp1ByB;;AAu1B5B,eAAe1F,UAAU,CAACC,GAAD,CAAzB;AACA;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FD","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Home from \"./components/Home\";\nimport FormApplication from \"./components/FormApplication\";\nimport CustomNav from \"./components/CustomNav\";\nimport Current from \"./components/Current\";\nimport Client from \"./components/Client\";\nimport SignUp from \"./components/SignUp\";\nimport AddPet from \"./components/AddPet\";\nimport PetList from \"./components/PetList\";\nimport EditPet from \"./components/EditPet\";\nimport EditClient from \"./components/EditClient\";\nimport History from \"./components/History\";\nimport Login from \"./components/Login\";\nimport ServiceNew from \"./components/ServiceNew\";\nimport _ from \"lodash\";\n\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    accounts: {\n      username: \"\",\n      password: \"\",\n    },\n    clientInfo: {\n      firstname: \"\",\n      lastname: \"\",\n      homephone: \"\",\n      workphone: \"\",\n    },\n    petInfo: {\n      name: \"\",\n      color: \"\",\n      specialconcerns: \"\",\n      rabies: \"\",\n    },\n    clients: \"\",\n    filteredClients: [],\n    filteredPets: [],\n    client_id: \"\",\n    clientName: \"\",\n    breedId: \"\",\n    breedName: \"\",\n    clientPets: \"\",\n    services: \"\",\n    serviceId: \"\",\n    breeds: \"\",\n    clientIdOnSelect: \"\",\n    pets: \"\",\n    petIdOnSelect: \"\",\n    appointments: \"\",\n\n    activeItem: \"Home\",\n    activeItemHome: \"Quick Check In\",\n\n    isLoading: false,\n    results: \"\",\n    value: \"\",\n    checkedIn: \"\",\n    search: \"\",\n    serviceNewValue: \"\",\n    curTime: \"\",\n  };\n\n  componentDidMount() {\n    this.fetchingAllClients();\n    this.fetchingAllAppointments();\n    this.fetchingAllBreed();\n    this.fetchingAllPets();\n    this.fetchingAllServices();\n\n    this.setState({\n      curTime: new Date().toLocaleDateString(),\n    });\n  }\n\n  fetchingAllClients = () => {\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(` https://agile-falls-85256.herokuapp.com/clients`, configObj)\n      .then((resp) => resp.json())\n      .then((clients) => {\n        console.log(\"hi this is from the heroku\", clients);\n        this.setState({\n          clients: clients,\n          filteredClients: clients,\n        });\n      });\n  };\n\n  fetchingAllBreed = () => {\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(`http://localhost:3000/breeds`, configObj)\n      .then((resp) => resp.json())\n      .then((breeds) => {\n        this.setState({\n          breeds,\n        });\n      });\n  };\n\n  fetchingAllServices = () => {\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(`http://localhost:3000/services`, configObj)\n      .then((resp) => resp.json())\n      .then((services) => {\n        this.setState({\n          services,\n        });\n      });\n  };\n\n  fetchingAllPets = () => {\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(`http://localhost:3000/pets`, configObj)\n      .then((resp) => resp.json())\n      .then((pets) => {\n        this.setState({\n          pets: pets,\n          filteredPets: pets,\n        });\n      });\n  };\n\n  fetchingAllAppointments = () => {\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(`http://localhost:3000/appointments`, configObj)\n      .then((resp) => resp.json())\n      .then((appointments) => {\n        this.setState({\n          appointments,\n        });\n      });\n  };\n\n  submitingPet = (event) => {\n    this.props.history.push(\"pet\");\n    const { petInfo, breedId, client_id } = this.state;\n    console.log(\"pet info----> \", petInfo);\n    event.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        pet: {\n          name: petInfo.name,\n          color: petInfo.color,\n          specialconcerns: petInfo.specialconcerns,\n          rabies: petInfo.rabies,\n          breed_id: breedId,\n          client_id: client_id,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/pets`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\",\n          },\n        });\n        const client_id = this.state.client_id;\n        this.fetchingClientPets(client_id);\n        this.fetchingAllPets();\n      });\n  };\n\n  submitingEditPet = (event) => {\n    event.preventDefault();\n    const { petInfo, client_id, breedId } = this.state;\n    const petId = petInfo.id;\n    const configObj = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        pet: {\n          name: petInfo.name,\n          color: petInfo.color,\n          specialconcerns: petInfo.specialconcerns,\n          rabies: petInfo.rabies,\n          breed_id: breedId,\n          client_id: client_id,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/pets/${petId}`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          petInfo: {\n            name: \"\",\n            color: \"\",\n            specialconcerns: \"\",\n            rabies: \"\",\n          },\n        });\n      });\n    this.props.history.push(\"/pet\");\n  };\n  petBreedOnChange = (breed) => {\n    const breedId = breed.id;\n    const breedName = breed.name;\n    this.setState({ breedId });\n    this.setState({ breedName });\n  };\n\n  submitingEditClient = (event) => {\n    event.preventDefault();\n    const { clientInfo, client_id } = this.state;\n    const c_id = clientInfo.id;\n    const configObj = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        client: {\n          lastname: clientInfo.lastname,\n          firstname: clientInfo.firstname,\n          homephone: clientInfo.homephone,\n          workphone: clientInfo.workphone,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/clients/${c_id}`, configObj)\n      .then((resp) => resp.json())\n      .then((pet) => {\n        console.log(pet);\n        this.fetchingClientPets(client_id);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\",\n          },\n        });\n        this.fetchingAllClients();\n      });\n    this.props.history.push(\"/client\");\n  };\n  petBreedOnChange = (e, breed) => {\n    console.log(\"breed change\", breed.value);\n    const breedId = breed.value;\n    const breedName = breed.name;\n    this.setState({ breedId });\n    this.setState({ breedName });\n  };\n\n  petInfoInputChange = (event) => {\n    const petInfo = { ...this.state.petInfo };\n    petInfo[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ petInfo });\n  };\n\n  handleLoginChange = (e, data) => {\n    const login = { ...this.state.login };\n    login[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ login });\n  };\n\n  handleChange = (event) => {\n    const accounts = { ...this.state.accounts };\n    accounts[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ accounts });\n  };\n\n  handleChangeServiceNew = (event) => {\n    const serviceNewValue = { ...this.state.serviceNewValue };\n    serviceNewValue[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ serviceNewValue });\n  };\n\n  addingNewService = (event, data) => {\n    event.preventDefault();\n\n    const { serviceNewValue } = this.state;\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        service: {\n          name: serviceNewValue.name,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/services`, configObj)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n        this.fetchingAllServices();\n        this.setState({\n          serviceNewValue: {\n            name: \"\",\n          },\n        });\n      });\n  };\n\n  formHandleChange = (event) => {\n    const clientInfo = { ...this.state.clientInfo };\n    clientInfo[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ clientInfo });\n  };\n\n  handleClick = (event) => {\n    const { login } = this.state;\n    console.log(login);\n    event.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: login.username,\n          password: login.password,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/api/login`, configObj)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        if (!json.hasOwnProperty(\"error\")) {\n          window.localStorage.setItem(\"token\", json.jwt);\n          window.localStorage.setItem(\"username\", json.user.username);\n          window.localStorage.setItem(\"userId\", `${json.user.id}`);\n          // window.location.assign(\"http://localhost:3000/users\");\n          this.setState({ current_user: json.user });\n          // console.log(\"fetching\", json);\n        } else {\n          this.setState({ error: json.error });\n        }\n      })\n      .then((data) => {\n        const localUserId = localStorage.getItem(\"userId\");\n\n        if (localUserId) {\n          this.fetchCurrentUser(localUserId);\n        }\n      })\n      .catch((error) => console.log(\"username or password did not match\"));\n    this.setState({\n      username: \"\",\n      password: \"\",\n    });\n    this.fetchingAllServices();\n    this.props.history.push(\"/\");\n  };\n\n  fetchingClientPets = (client_id) => {\n    console.log(\"client info\");\n    let configObj = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    };\n    fetch(`http://localhost:3000/clients/${client_id}`, configObj)\n      .then((resp) => resp.json())\n      .then((pets) => {\n        console.log(\"my response\", pets);\n        this.setState({\n          clientPets: pets,\n        });\n      });\n  };\n\n  addingPetToAClient = (client) => {\n    const client_id = client.id;\n    this.fetchingClientPets(client_id);\n    this.setState({ client_id });\n    this.setState({ clientName: client.firstname });\n    this.props.history.push(\"/addPet\");\n  };\n\n  addingUser = (event, data) => {\n    event.preventDefault();\n\n    const { accounts } = this.state;\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: accounts.username,\n          password: accounts.password,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/api/users`, configObj)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(\"json\", json);\n        this.props.history.push(\"/\");\n      });\n  };\n\n  clientPetOnClick = (client) => {\n    const client_id = client.id;\n    this.fetchingClientPets(client_id);\n    this.setState({ client_id });\n    this.setState({ clientName: client.firstname });\n    this.props.history.push(\"/pet\");\n  };\n\n  petOnClickDelete = (pet) => {\n    console.log(\"delete\");\n    const petId = pet.id;\n    const pets = this.state.clientPets.filter((d) => d.id !== petId);\n    this.setState({ clientPets: pets });\n    fetch(`http://localhost:3000/pets/${petId}`, {\n      method: \"DELETE\",\n    });\n    this.fetchingAllPets();\n  };\n\n  serviceOnClickDelete = (service) => {\n    console.log(\"service\", service.id);\n    const serviceId = service.id;\n    const services = this.state.services.filter((d) => d.id !== serviceId);\n    console.log(services);\n    this.setState({ services });\n    fetch(`http://localhost:3000/services/${serviceId}`, {\n      method: \"DELETE\",\n    });\n    this.fetchingAllServices();\n  };\n\n  deleteClientHandleClick = (client) => {\n    const clientId = client.id;\n    const clients = this.state.clients.filter((c) => c.id !== clientId);\n    this.setState({ clients });\n    fetch(`http://localhost:3000/clients/${clientId}`, {\n      method: \"DELETE\",\n    });\n    this.fetchingAllClients();\n  };\n\n  petOnClickEdit = (pet) => {\n    this.setState({ petInfo: pet });\n    this.props.history.push(\"/editPet\");\n  };\n\n  addingClient = (event) => {\n    event.preventDefault();\n    const { clientInfo } = this.state;\n    fetch(\"http://localhost:3000/clients\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        client: {\n          lastname: clientInfo.lastname,\n          firstname: clientInfo.firstname,\n          homephone: clientInfo.homephone,\n          workphone: clientInfo.workphone,\n        },\n      }),\n    })\n      .then((r) => r.json())\n      .then((client) => {\n        console.log(\"after submitting\", client);\n        this.setState({\n          clientInfo: {\n            firstname: \"\",\n            lastname: \"\",\n            homephone: \"\",\n            workphone: \"\",\n          },\n        });\n        this.fetchingAllClients();\n      });\n    this.props.history.push(\"/client\");\n  };\n\n  clientOnClickEdit = (clientInfo) => {\n    this.setState({ clientInfo });\n    this.props.history.push(\"/editclient\");\n  };\n\n  servicesOnClick = (e, service) => {\n    console.log(e);\n    console.log(\"service => \", service.value);\n\n    const serviceId = service.value;\n    this.setState({ serviceId });\n  };\n\n  selectPetOnClick = (e, pet) => {\n    console.log(\"pet -> \", pet.value);\n\n    const petIdOnSelect = pet.value;\n    this.setState({ petIdOnSelect });\n  };\n\n  checkIn = (event) => {\n    event.preventDefault();\n    console.log(\"event\", event);\n    fetch(\"http://localhost:3000/appointments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        appointment: {\n          pet_id: this.state.petIdOnSelect,\n          service_id: this.state.serviceId,\n          date: this.state.curTime,\n        },\n      }),\n    })\n      .then((r) => r.json())\n      .then((appointments) => {\n        console.log(\"after submitting\", appointments);\n        this.setState({\n          appointments: [...this.state.appointments, appointments],\n          activeItemHome: \"Checked In\",\n        });\n        console.log(\"after setting state\", this.state.appointments);\n        this.fetchingAllAppointments();\n        this.fetchingAllPets();\n      });\n  };\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.name });\n  };\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1)\n        return this.setState({ isLoading: false, results: \"\", value: \"\" });\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = (result) => re.test(result.name);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.state.pets, isMatch),\n      });\n    }, 300);\n  };\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n\n    if (name === \"History\") {\n      this.fetchingAllPets();\n    }\n  };\n\n  handleItemClickHome = (e, { name }) =>\n    this.setState({ activeItemHome: name });\n\n  finishOnClick = (data) => {\n    console.log(\"data on click\", data);\n    const configObj = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        appointment: {\n          appointment_id: data.appointmentId,\n        },\n      }),\n    };\n    fetch(`http://localhost:3000/appointments/${data.appointmentId}`, configObj)\n      .then((resp) => resp.json())\n      .then((a) => {\n        console.log(a);\n        this.fetchingAllAppointments();\n      });\n  };\n\n  searchClientsHandleChange = (input, e) => {\n    console.log(\"input\", input);\n    console.log(\"e\", e);\n\n    this.setState({ search: input.target.value });\n\n    const lowercasedSearchInput = this.state.search.toLowerCase();\n    console.log(\"lower case search input\", lowercasedSearchInput);\n\n    const searchResults = this.state.clients.filter((client) => {\n      let lowercasedClient = client.firstname.toLowerCase();\n      return lowercasedClient.includes(lowercasedSearchInput);\n    });\n    console.log(\"search results\", searchResults);\n\n    this.setState({\n      filteredClients: searchResults,\n    });\n\n    if (input.nativeEvent.inputType === \"deleteContentBackward\") {\n      this.fetchingAllClients();\n    }\n  };\n\n  searchHistoryHandleChange = (input, e) => {\n    this.setState({ search: input.target.value });\n\n    const lowercasedSearchInput = this.state.search.toLowerCase();\n    console.log(\"lower case search input\", lowercasedSearchInput);\n\n    const searchResults = this.state.pets.filter((pet) => {\n      let lowercasedPet = pet.name.toLowerCase();\n      return lowercasedPet.includes(lowercasedSearchInput);\n    });\n    console.log(\"search results\", searchResults);\n\n    this.setState({\n      filteredPets: searchResults,\n    });\n\n    if (input.nativeEvent.inputType === \"deleteContentBackward\") {\n      this.fetchingAllPets();\n    }\n  };\n\n  handleClickLogout = (event) => {\n    event.preventDefault();\n    localStorage.clear();\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    console.log(\"pets\", this.state.pets);\n    return (\n      <Fragment>\n        <div class=\"ui huge header center aligned blue\">\n          K9 Grooming\n          <div class=\"sub header\">\n            Manage your account settings and set e-mail preferences.\n          </div>\n        </div>\n        <div>\n          <CustomNav\n            handleItemClick={this.handleItemClick}\n            activeItem={this.state.activeItem}\n            searchClientsHandleChange={this.searchClientsHandleChange}\n            searchHistoryHandleChange={this.searchHistoryHandleChange}\n            handleClickLogout={this.handleClickLogout}\n          />\n        </div>\n        <div class=\"ui segment\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Home\n                  activeItemHome={this.state.activeItemHome}\n                  finishOnClick={this.finishOnClick}\n                  handleItemClickHome={this.handleItemClickHome}\n                  services={this.state.services}\n                  servicesOnClick={this.servicesOnClick}\n                  selectPetOnClick={this.selectPetOnClick}\n                  pets={this.state.pets}\n                  checkIn={this.checkIn}\n                  appointments={this.state.appointments}\n                  handleResultSelect={this.handleResultSelect}\n                  handleSearchChange={this.handleSearchChange}\n                  isLoading={this.state.isLoading}\n                  results={this.state.results}\n                  value={this.state.value}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/form\"\n              render={() => (\n                <FormApplication\n                  addingClient={this.addingClient}\n                  clientInfo={this.state.clientInfo}\n                  formHandleChange={this.formHandleChange}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/history\"\n              render={() => (\n                <History\n                  pets={this.state.filteredPets}\n                  appointments={this.state.appointments}\n                  services={this.state.services}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/services/new\"\n              render={() => (\n                <ServiceNew\n                  serviceNew={this.state.serviceNewValue}\n                  handleChangeServiceNew={this.handleChangeServiceNew}\n                  addingNewService={this.addingNewService}\n                  services={this.state.services}\n                  serviceOnClickDelete={this.serviceOnClickDelete}\n                />\n              )}\n            />\n            <Route exact path=\"/current\" render={() => <Current />} />\n            <Route\n              exact\n              path=\"/client\"\n              render={() => (\n                <Client\n                  deleteClientHandleClick={this.deleteClientHandleClick}\n                  filteredClients={this.state.filteredClients}\n                  clients={this.state.clients}\n                  addingPetToAClient={this.addingPetToAClient}\n                  clientOnClickEdit={this.clientOnClickEdit}\n                  clientPetOnClick={this.clientPetOnClick}\n                  clientPets={this.state.clientPets}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/customnav\"\n              render={() => (\n                <CustomNav\n                  handleItemClick={this.handleItemClick}\n                  search={this.state.search}\n                  activeItem={this.state.activeItem}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => (\n                <SignUp\n                  handleChange={this.handleChange}\n                  accounts={this.state.accounts}\n                  addingUser={this.addingUser}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/addPet\"\n              render={() => (\n                <AddPet\n                  petOnClickEdit={this.petOnClickEdit}\n                  petInfo={this.state.petInfo}\n                  breeds={this.state.breeds}\n                  submitingPet={this.submitingPet}\n                  petInfoInputChange={this.petInfoInputChange}\n                  clientPets={this.state.clientPets}\n                  petBreedOnChange={this.petBreedOnChange}\n                  breedName={this.state.breedName}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/editPet\"\n              render={() => (\n                <EditPet\n                  petInfo={this.state.petInfo}\n                  breeds={this.state.breeds}\n                  submitingEditPet={this.submitingEditPet}\n                  petInfoInputChange={this.petInfoInputChange}\n                  clientPets={this.state.clientPets}\n                  petBreedOnChange={this.petBreedOnChange}\n                  breedName={this.state.breedName}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/editclient\"\n              render={() => (\n                <EditClient\n                  submitingEditClient={this.submitingEditClient}\n                  clientInfo={this.state.clientInfo}\n                  formHandleChange={this.formHandleChange}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/pet\"\n              render={() => (\n                <PetList\n                  clientPets={this.state.clientPets}\n                  clientName={this.state.clientName}\n                  petOnClickDelete={this.petOnClickDelete}\n                  petOnClickEdit={this.petOnClickEdit}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Login\n                  handleLoginChange={this.handleLoginChange}\n                  handleClick={this.handleClick}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n{\n  /* <div>\n        <div class=\"ui huge header center aligned blue\">K9 Grooming</div>\n        <div class=\"ui grid\">\n          <div class=\"four column\">\n            <CustomNav />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home />} />\n              <Route\n                exact\n                path=\"/form\"\n                render={() => (\n                  <FormApplication\n                    addingClient={this.addingClient}\n                    clientInfo={this.state.clientInfo}\n                    formHandleChange={this.formHandleChange}\n                  />\n                )}\n              />\n              <Route exact path=\"/current\" render={() => <Current />} />\n              <Route\n                exact\n                path=\"/client\"\n                render={() => (\n                  <Client\n                    deletePetHandleClick={this.deletePetHandleClick}\n                    clients={this.state.clients}\n                    addingPetToAClient={this.addingPetToAClient}\n                    clientPetOnClick={this.clientPetOnClick}\n                    clientPets={this.state.clientPets}\n                  />\n                )}\n              />\n              <Route exact path=\"/customnav\" render={() => <CustomNav />} />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => (\n                  <SignUp\n                    handleChange={this.handleChange}\n                    accounts={this.state.accounts}\n                    addingUser={this.addingUser}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/addPet\"\n                render={() => (\n                  <AddPet\n                    petOnClickEdit={this.petOnClickEdit}\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingPet={this.submitingPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/editPet\"\n                render={() => (\n                  <EditPet\n                    petInfo={this.state.petInfo}\n                    breeds={this.state.breeds}\n                    submitingEditPet={this.submitingEditPet}\n                    petInfoInputChange={this.petInfoInputChange}\n                    clientPets={this.state.clientPets}\n                    petBreedOnChange={this.petBreedOnChange}\n                    breedName={this.state.breedName}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/pet\"\n                render={() => (\n                  <PetList\n                    clientPets={this.state.clientPets}\n                    clientName={this.state.clientName}\n                    petOnClickDelete={this.petOnClickDelete}\n                    petOnClickEdit={this.petOnClickEdit}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div> */\n}\n"]},"metadata":{},"sourceType":"module"}